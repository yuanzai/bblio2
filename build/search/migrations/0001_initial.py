# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-02-11 20:47
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_text', models.TextField(blank=True, default=None, null=True)),
                ('urlAddress', models.URLField(max_length=1000)),
                ('domain', models.TextField()),
                ('title', models.TextField(blank=True, default=None, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True)),
                ('isUsed', models.SmallIntegerField(db_index=True, default=0)),
                ('response_code', models.SmallIntegerField(blank=True, null=True)),
                ('document_html', models.TextField(blank=True, null=True)),
                ('encoding', models.CharField(blank=True, max_length=255, null=True)),
                ('update_group', models.SmallIntegerField(blank=True, db_index=True, null=True)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('index_batch', models.IntegerField(blank=True, db_index=True, null=True)),
                ('isPDF', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scrapyd_job_id', models.CharField(max_length=100, unique=True)),
                ('instance', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Phrase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phrase', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('source_allowed_domains', models.TextField()),
                ('source_start_urls', models.TextField()),
                ('source_allowFollow', models.TextField(blank=True, null=True)),
                ('source_denyFollow', models.TextField(blank=True, null=True)),
                ('source_allowParse', models.TextField(blank=True, null=True)),
                ('source_denyParse', models.TextField(blank=True, null=True)),
                ('parse_parameters', models.TextField(blank=True, null=True)),
                ('follow_parameters', models.TextField(blank=True, null=True)),
                ('deny_parameters', models.TextField(blank=True, null=True)),
                ('lastupdate', models.DateTimeField(blank=True, null=True)),
                ('parseCount', models.IntegerField(blank=True, null=True)),
                ('responseCount', models.IntegerField(blank=True, null=True)),
                ('grouping', models.CharField(blank=True, max_length=255, null=True)),
                ('running', models.BooleanField(default=False)),
                ('depthlimit', models.IntegerField(default=30)),
                ('jurisdiction', models.CharField(blank=True, max_length=10, null=True)),
                ('jobid', models.CharField(blank=True, max_length=100, null=True)),
                ('instance', models.CharField(blank=True, max_length=30, null=True)),
                ('owner', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestingGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TestingResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('searchterm', models.TextField()),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='search.Document')),
                ('testinggroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='search.TestingGroup')),
            ],
        ),
        migrations.CreateModel(
            name='TextFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter_type', models.CharField(db_index=True, max_length=30)),
                ('filter_text', models.TextField(blank=True, null=True)),
                ('filter_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='search.Site')),
            ],
        ),
        migrations.AddField(
            model_name='job',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='search.Site'),
        ),
        migrations.AddField(
            model_name='document',
            name='foot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='search.TextFilter'),
        ),
        migrations.AddField(
            model_name='document',
            name='head',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='search.TextFilter'),
        ),
        migrations.AddField(
            model_name='document',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='search.Site'),
        ),
    ]
